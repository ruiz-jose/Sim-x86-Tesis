@article{zeigler_theory_2000,
	title = {Theory of {Modeling} and {Simulation}: {Integrating} {Discrete} {Event} and {Continuous} {Complex} {Dynamic} {Systems}},
	volume = {2},
	shorttitle = {Theory of {Modeling} and {Simulation}},
	author = {Zeigler, Bernard and Prähofer, Herbert and Kim, Tag Gon},
	month = jan,
	year = {2000},
}

@book{law_simulation_2015,
	address = {New York, NY, USA},
	edition = {5},
	title = {Simulation {Modeling} \& {Analysis}},
	publisher = {McGraw-Hill},
	author = {Law, Averill M.},
	year = {2015},
}

@book{bryant2015computer,
  title={Computer systems: A programmer's perspective},
  author={Bryant, Randal E and O'Hallaron, David R},
  year={2015},
  publisher={Pearson}
}

@article{calvo_valdes_simulador_2010,
	title = {Simulador del procesador {MIPS} sobre el formalismo {DEVS}},
	url = {https://hdl.handle.net/20.500.14352/46063},
	abstract = {Ciertos conceptos relativos a los procesadores, tales como detalles de implementación, análisis de rendimiento, consumo de energía y fiabilidad son fundamentales en los cursos orientados a arquitectura de computadores. El procesador MIPS (del inglés Microprocessor without Interlocked Pipeline Stages) se utiliza actualmente en muchas Universidades para enseñar estas materias. En este proyecto presentamos un simulador del procesador MIPS, que facilitará la enseñanza de este procesador en cursos de arquitectura de computadores. Desarrollamos varios modelos del procesador basado en un ciclo, en varios, o en un cauce segmentado. Los modelos se construyen de acuerdo a una especificación formal denominada DEVS (del inglés Discrete EVent Systems specification). Para ello definimos una colección elemental de modelos combinacionales y secuenciales, que se combinan para formar el procesador final. Gracias al uso de un compilador cruzado, se puede importar código escrito en C y traducirlo a lenguaje ensamblador. El simulador recibe como entrada este código, permitiendo analizar el comportamiento interno del procesador, el estado de los módulos y el valor de las señales de control en cada momento de la ejecución. Para facilitar esta tarea elaboramos una interfaz gráfica que nos permite visualizar los resultados de la ejecución, con el objetivo de comparar las diversas implementaciones del MIPS. [ABSTRACT] There are certain concepts about processors, like implementation details, performance analisys, energy consumption and reliability which are fundamental in all learning courses related to computer architecture. The MIPS processor (Microprocessor without Interlocked Pipeline Stages) is being used as a basis to teach these courses. In this proyect we proudly present a full simulator of the MIPS processor architecture, which will serve as a strong support for all kind of computer architecture learning courses. We have developed three versions of the model: monocycle, multicycle and pipelined. These models have been built using DEVS (Discrete EVent Systems specification). With this purpose on mind we have defined a basic set of sequential and combinational models that combine themselves to set up the final processor. By using a cross compiler, we can import programs devoloped in C language and generate a binary file including the corresponding Assemby Language code. Our simulator receives these binaries as input to execute programs, allowing us to check and analyze the inner behaviour of the processor, the state of the sequential and combinational models, and values for all the Control Unit signals at anytime in the execution process. To simplify this task, we have made a GUI (Graphic User Interface) which logs the results of every instruction, so we can compare them to study the differences between each MIPS implementation.},
	language = {spa},
	urldate = {2024-09-19},
	author = {Calvo Valdés, Francisco Alejandro and Roldán Ramírez, José Félix and San Miguel Sánchez, Alfonso},
	year = {2010},
	journal = {Revista de Simulación},
}

@book{jentsch_simulation_2017,
  title={Simulation in aviation training},
  author={Jentsch, Florian and Curtis, Michael},
  year={2017},
  publisher={Routledge}
}

@article{stork_towards_2008,
  title={Towards interactive simulation in automotive design},
  author={Stork, Andr{\'e} and Thole, Clemens-August and Klimenko, Stanislav and Nikitin, Igor and Nikitina, Lialia and Astakhov, Yuri},
  journal={The Visual Computer},
  volume={24},
  pages={947--953},
  year={2008},
  publisher={Springer}
}

@book{peterson_petri_1981,
	title = {Petri net theory and the modeling of systems},
	publisher = {Prentice Hall PTR},
	author = {Peterson, James Lyle},
	year = {1981},
}

@book{abel_ibm_2000,
	address = {Upper Saddle River, NJ, USA},
	edition = {5th},
	title = {{IBM} {PC} {Assembly} {Language} and {Programming}},
	isbn = {0-13-030655-X},
	publisher = {Prentice Hall PTR},
	author = {Abel, Peter},
	year = {2000},
}

@book{banks_discrete-event_2010,
	edition = {5th ed.},
	title = {Discrete-event system simulation},
	isbn = {0-13-606212-1},
	language = {English},
	publisher = {Prentice Hall},
	author = {Banks, Jerry and Carson, John S. and Nelson, Barry L. and Nicol, David M.},
	year = {2010},
}

@book{zeigler_theory_2018,
	title = {Theory of {Modeling} and {Simulation}: {Discrete} {Event} \& {Iterative} {System} {Computational} {Foundations}},
	isbn = {978-0-12-813407-8},
	shorttitle = {Theory of {Modeling} and {Simulation}},
	abstract = {Theory of Modeling and Simulation: Discrete Event \& Iterative System Computational Foundations, Third Edition, continues the legacy of this authoritative and complete theoretical work. It is ideal for graduate and PhD students and working engineers interested in posing and solving problems using the tools of logico-mathematical modeling and computer simulation. Continuing its emphasis on the integration of discrete event and continuous modeling approaches, the work focuses light on DEVS and its potential to support the co-existence and interoperation of multiple formalisms in model components.  New sections in this updated edition include discussions on important new extensions to theory, including chapter-length coverage of iterative system specification and DEVS and their fundamental importance, closure under coupling for iteratively specified systems, existence, uniqueness, non-deterministic conditions, and temporal progressiveness (legitimacy). Presents a 40\% revised and expanded new edition of this classic book with many important post-2000 extensions to core theory Provides a streamlined introduction to Discrete Event System Specification (DEVS) formalism for modeling and simulation Packages all the "need-to-know" information on DEVS formalism in one place  Expanded to include an online ancillary package, including numerous examples of theory and implementation in DEVS-based software, student solutions and instructors manual},
	language = {en},
	publisher = {Academic Press},
	author = {Zeigler, Bernard P. and Muzy, Alexandre and Kofman, Ernesto},
	month = aug,
	year = {2018},
	note = {Google-Books-ID: VBhpDwAAQBAJ},
	keywords = {Mathematics / Applied, Mathematics / General},
}

@inproceedings{hasan_survey_2012,
	title = {Survey and evaluation of simulators suitable for teaching for computer architecture and organization {Supporting} undergraduate students at {Sir} {Syed} {University} of {Engineering} \& {Technology}},
	booktitle = {Control ({CONTROL}), 2012 {UKACC} {International} {Conference} on},
	publisher = {IEEE},
	author = {Hasan, Raza and Mahmood, Salman},
	year = {2012},
	pages = {1043--1045},
}

@book{robinson_simulation_2014,
	edition = {2nd edition},
	title = {Simulation: {The} {Practice} of {Model} {Development} and {Use}},
	isbn = {978-1-137-32802-1},
	author = {Robinson, Stewart},
	year = {2014},
	publisher = {Wiley}
}

@article{garcia-garcia_pbbcache_2020,
	title = {{PBBCache}: {An} open-source parallel simulator for rapid prototyping and evaluation of cache-partitioning and cache-clustering policies},
	volume = {42},
	journal = {Journal of Computational Science},
	author = {Garcia-Garcia, Adrian and Saez, Juan Carlos and Risco-Martin, José Luis and Prieto-Matias, Manuel},
	year = {2020},
	note = {Publisher: Elsevier},
	pages = {101102},
}

@article{lion_simuladores_2005,
	title = {Los simuladores. {Su} potencial para la enseñanza universitaria},
	volume = {2},
	number = {12},
	journal = {Cuadernos de Investigación Educativa},
	author = {Lion, Carina},
	year = {2005},
	note = {Number: 12},
	pages = {53--66},
}

@article{mustafa_evaluating_2010,
	title = {Evaluating {A} {System} {Simulator} {For} {Computer} {Architecture} {Teaching} {And} {Learning} {Support}},
	volume = {9},
	url = {https://doi.org/10.11120/ital.2010.09010100},
	doi = {10.11120/ital.2010.09010100},
	number = {1},
	journal = {Innovation in Teaching and Learning in Information and Computer Sciences},
	author = {Mustafa, Besim},
	year = {2010},
	note = {Number: 1},
	pages = {100--104},
}

@misc{amd_developer_2019,
	title = {Developer {Guides}, {Manuals} \& {ISA} {Documents}},
	url = {https://developer.amd.com/resources/developer-guides-manuals/},
	abstract = {Developer guides, reference manuals \& ISA documents for the AMD A10, A8, A6 7000 Series APUs, CodeXL, Radeon, AMD64 Architecture, compilers, bios and kernel guides \& more.},
	language = {en-US},
	urldate = {2019-04-21},
	author = {{AMD}},
	month = apr,
	year = {2019},
}

@book{stallings_computer_2013,
	edition = {Eleventh Edition},
	title = {Computer organization and architecture: designing for performance},
	publisher = {Pearson},
	author = {Stallings, William},
	year = {2013},
}

@book{behrooz_computer_2005,
	title = {Computer {Architecture}: {From} {Microprocessors} to {Supercomputers}},
	publisher = {Oxford University Press Inc},
	author = {BEHROOZ, PARHAMI},
	year = {2005},
}

@inproceedings{radivojevic_design_2011,
	title = {Design of the simulator for teaching computer architecture and organization},
	booktitle = {2011 {Second} {Eastern} {European} {Regional} {Conference} on the {Engineering} of {Computer} {Based} {Systems}},
	publisher = {IEEE},
	author = {Radivojevic, Zaharije and Cvetanovic, Milos and Ðordevic, Jovan},
	year = {2011},
	pages = {124--130}
}

@article{skrien_cpu_2001,
	title = {{CPU} {Sim} 3.1: {A} tool for simulating computer architectures for computer organization classes},
	journal = {Journal on Educational Resources in Computing (JERIC)},
	author = {Skrien, Dale},
	year = {2001}
}

@book{hennessy_computer_2012,
	edition = {Fifth Edition},
	title = {Computer architecture: {A} quantitative approach},
	isbn = {978-0-12-383872-8},
	publisher = {Elsevier},
	author = {Hennessy, John L and Patterson, David A},
	year = {2012}
}

@book{patterson2016computer,
  title={Computer organization and design ARM edition: the hardware software interface},
  author={Patterson, David A and Hennessy, John L},
  year={2016},
  publisher={Morgan kaufmann}
}

@book{null_essentials_2014,
	title = {Essentials of Computer Organization and Architecture},
	isbn = {978-1-284-03315-1},
	publisher = {Jones \& Bartlett Publishers},
	author = {Null, Linda and Lobur, Julia},
	date = {2014-02-17}	
}

@book{patterson_computer_2014,
	title={Computer Organization and Design: The Hardware/Software Interface-5th},
	author={Patterson and others},
	year={2014},
	publisher={Morgan Kaufmann}
}

@book{tanenbaum_structured_2013,
	title={Structured computer organization},
	author={Tanenbaum, Andrew S},
	year={2013},
	publisher={Pearson Education}
}

@book{murdocca_principles_2000,
	title={Principles of Computer Architecture},
	author={Murdocca, Miles J and Heuring, Vincent},
	year={2000},
	publisher={Pearson Education}
}

@book{patterson2016computer,
	title={Computer organization and design ARM edition: the hardware software interface},
	author={Patterson, David A and Hennessy, John L},
	year={2016},
	publisher={Morgan kaufmann}
}

@book{patterson_computer_2017,
	title={Computer Organization and Design RISC-V Edition: The Hardware Software Interface},
	author={Patterson, David A. and Hennessy, John L.},
	year={2017},
	publisher={Morgan Kaufmann}
}

@book{harris2015digital,
  title={Digital design and computer architecture},
  author={Harris, Sarah and Harris, David},
  year={2015},
  publisher={Morgan Kaufmann}
}

@article{waterman_risc-v_2014,
  title={The risc-v instruction set manual, volume i: User-level isa},
  author={Waterman, Andrew and Lee, Yunsup and Patterson, David A and Asanovic, Krste},
  journal={CS Division, EECE Department, University of California, Berkeley},
  pages={28},
  year={2014}
}

@article{belli2020iot,
  title={IoT-enabled smart sustainable cities: Challenges and approaches},
  author={Belli, Laura and Cilfone, Antonio and Davoli, Luca and Ferrari, Gianluigi and Adorni, Paolo and Di Nocera, Francesco and Dall’Olio, Alessandro and Pellegrini, Cristina and Mordacci, Marco and Bertolotti, Enzo},
  journal={Smart Cities},
  volume={3},
  number={3},
  pages={1039--1071},
  year={2020},
  publisher={MDPI}
}

@article{nikolic_survey_2009,
	title = {A {Survey} and {Evaluation} of {Simulators} {Suitable} for {Teaching} {Courses} in {Computer} {Architecture} and {Organization}},
	volume = {52},
	issn = {0018-9359},
	doi = {10.1109/TE.2008.930097},
	number = {4},
	journal = {IEEE Transactions on Education},
	author = {Nikolic, B. and Radivojevic, Z. and Djordjevic, J. and Milutinovic, V.},
	month = nov,
	year = {2009},
	note = {Number: 4},
	keywords = {computer aided instruction, Computer aided instruction, computer architecture, Computer architecture, Computer Architecture and Organization course, Computer Engineering curricula, computer science education, Computer science education, computer system simulators, computer-aided instruction, educational courses, educational technology, Educational technology, simulation, Simulation, teaching},
	pages = {449--458},
}

@article{intel_64_2016,
	title = {64 and {IA}-32 architectures software developers manual},
	volume = {1, 2A, 2B, 2C, 2D, 3A, 3B, 3C and 3D},
	url = {https://software.intel.com/en-us/articles/intel-sdm},
	journal = {325462-060US},
	author = {{Intel}},
	year = {2016},
	pages = {4670},
}

@inproceedings{nova_tool_2013,
	title = {Tool to support computer architecture teaching and learning},
	booktitle = {Engineering {Education} ({CISPEE}), 2013 1st {International} {Conference} of the {Portuguese} {Society} for},
	publisher = {IEEE},
	author = {Nova, Bruno and Ferreira, Joao C and Araújo, António},
	year = {2013},
	pages = {1--8},
}

@article{contreras_uso_2010,
	title = {Uso de simuladores como recurso digital para la transferencia de conocimiento},
	volume = {2},
	number = {1},
	journal = {Apertura: Revista de Innovación Educativa},
	author = {Contreras, Gloria and Torres, Rosa García and Montoya, María Soledad Ramírez},
	year = {2010},
	note = {Number: 1},
	pages = {86--100},
}

@inproceedings{colombani_herramientas_2022,
	title = {Herramientas de software para dar soporte en la enseñanza y aprendizaje de la arquitectura x86},
	copyright = {http://creativecommons.org/licenses/by-nc-sa/4.0/},
	isbn = {978-950-698-522-6},
	url = {http://sedici.unlp.edu.ar/handle/10915/139908},
	abstract = {Existe un consenso creciente en el uso de herramientas de simulación en la enseñanza para procesos dinámicos complejos, como las operaciones intrínsecas de la computadora, que permiten representar de forma visual e interactiva la organización y arquitectura interna de la computadora, facilitando así la comprensión de su funcionamiento por parte de los alumnos y el desarrollo de los temas por parte del docente. En este contexto, los simuladores juegan una pieza clave en el campo de la Arquitectura de Computadoras, permitiendo conectar fundamentos teóricos con la experiencia práctica, simplificando abstracciones y haciendo más rica la labor docente.
La arquitectura x86 es ampliamente utilizada en computadoras de escritorio y servidores.
Este documento pretende realizar una comparación de los simuladores x86 que más se adecuan en el dictado de la asignatura Arquitectura de Computadoras de la carrera Licenciatura en Sistemas, establecer los criterios de evaluación y evaluar los simuladores seleccionados de acuerdo con estos criterios.
La presente investigación surge en el marco del proyecto de investigación I/D novel PIDUNER 7065: “Enseñanza/aprendizaje de asignatura Arquitectura de Computadoras con herramientas de simulación de sistemas de cómputos”. El Proyecto es llevado a cabo en la Facultad de Ciencias de la Administración de la Universidad Nacional de Entre Ríos, se vincula directamente con la asignatura Arquitectura en Computadoras que se dicta en segundo año de la carrera Licenciatura en Sistemas perteneciente a la Facultad de Ciencias de la Administración de la Universidad Nacional de Entre Ríos.},
	language = {es},
	urldate = {2024-07-10},
	author = {Colombani, Marcelo A. and Ruiz, José M. and Delduca, Amalia G. and Falappa, Marcelo Alejandro},
	year = {2022},
}

@misc{colombani_pid_2022,
	title = {{PID} novel 7065: {Enseñanza}/aprendizaje de asignatura {Arquitectura} de {Computadoras} con herramientas de simulación de sistemas de cómputos},
	url = {https://proyectos.uner.edu.ar/aplicacion.php?ah=st668e6d47663eb&ai=gestion_extinv||23000105},
	urldate = {2024-07-10},
	author = {Colombani, Marcelo A. and Falappa, Marcelo Alejandro and Delduca, Amalia G. and Ruiz, José M.},
	month = feb,
	year = {2022},
}

@book{irvine2011assembly,
  title={Assembly language for x86 processors},
  author={Irvine, Kip R and Das, Lyla B},
  year={2011},
  publisher={Prentice Hall}
}

@book{hyde2010art,
  title={The art of assembly language},
  author={Hyde, Randall},
  year={2010},
  publisher={No Starch Press}
}

@book{tasm,
  author    = {Borland International},
  title     = {Turbo Assembler User's Guide},
  year      = {1993},
  publisher = {Borland International}
}

@book{masm,
  author    = {Microsoft Corporation},
  title     = {Microsoft Macro Assembler 6.1 Reference},
  year      = {1992},
  publisher = {Microsoft Press}
}

@manual{nasm,
  author    = {{The NASM Project}},
  title     = {The Netwide Assembler (NASM) Manual},
  year      = {2023},
  note      = {Retrieved from \url{https://nasm.us/doc/nasmdoc.pdf}}
}


